@import "tailwindcss";

:root {
  /* Color palette variables */
  --color-blue: #1F40ED;
  --color-black: #141414;
  /* Beige color definition - warm creamy off-white (#F5F5F0) */
  --color-beige: #FFF;
  --color-white: #FFFFFF;

  /* Light theme variables */
  /* Beige canvas background for light mode */
  --background: var(--color-beige);
  --foreground: var(--color-black);
  --glass: rgba(230, 230, 230, 0.85);
  --glass-border: rgba(255, 255, 255, 0.3);
  --accent: #f8f9fa;
  --shadow: 0 8px 32px rgba(20, 20, 20, 0.08);
  --shadow-lg: 0 20px 64px rgba(20, 20, 20, 0.15);

  /* Canvas grid colors */
  --grid-primary: rgba(20, 20, 20, 0.06);
  --grid-secondary: rgba(20, 20, 20, 0.03);
  --grid-accent: rgba(20, 20, 20, 0.1);

  /* Node colors */
  --node-bg: rgba(255, 255, 255, 0.95);
  --node-border: rgba(255, 255, 255, 0.4);
  --node-shadow: 0 8px 32px rgba(20, 20, 20, 0.12);
  --node-header-bg: rgba(255, 255, 255, 0.2);
  --node-input-bg: rgba(255, 255, 255, 0.6);
  --node-text: var(--color-black);
  --node-text-muted: rgba(20, 20, 20, 0.65);

  /* Button colors */
  --button-primary-bg: var(--color-blue);
  /* Beige text color for blue buttons in light mode */
  --button-primary-text: var(--color-beige);
  --button-secondary-bg: rgba(255, 255, 255, 0.7);
  --button-secondary-text: var(--color-black);
}

.dark {
  /* Dark theme variables */
  --background: var(--color-black);
  --foreground: var(--color-white);
  --glass: rgba(20, 20, 20, 0.85);
  --glass-border: rgba(255, 255, 255, 0.15);
  --accent: #1a1a1a;
  --shadow: 0 8px 32px rgba(0, 0, 0, 0.6);
  --shadow-lg: 0 20px 64px rgba(0, 0, 0, 0.8);

  /* Canvas grid colors */
  --grid-primary: rgba(255, 255, 255, 0.06);
  --grid-secondary: rgba(255, 255, 255, 0.03);
  --grid-accent: rgba(255, 255, 255, 0.1);

  /* Node colors */
  --node-bg: rgba(20, 20, 20, 0.95);
  --node-border: rgba(255, 255, 255, 0.15);
  --node-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
  --node-header-bg: rgba(255, 255, 255, 0.08);
  --node-input-bg: rgba(255, 255, 255, 0.08);
  --node-text: var(--color-white);
  --node-text-muted: rgba(255, 255, 255, 0.65);

  /* Button colors */
  /* Beige button background for dark mode */
  --button-primary-bg: var(--color-beige);
  --button-primary-text: var(--color-black);
  --button-secondary-bg: rgba(255, 255, 255, 0.1);
  --button-secondary-text: var(--color-white);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-inter);
  --font-mono: var(--font-jetbrains-mono);
  --font-serif: var(--font-playfair);
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-inter);
  font-weight: 400;
  min-height: 100vh;
  overflow-x: hidden;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Frosted glass effect */
.glass {
  background: var(--glass);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid var(--glass-border);
  box-shadow: var(--shadow);
}

.glass-strong {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(40px);
  -webkit-backdrop-filter: blur(40px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: var(--shadow-lg);
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.1);
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.2);
}

/* Hardware acceleration and smooth transitions */
* {
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000;
  perspective: 1000;
}

/* Optimized transitions - only animate transform and opacity */
.smooth-transition {
  transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1),
    opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}

.smooth-transition-fast {
  transition: transform 0.1s cubic-bezier(0.4, 0, 0.2, 1),
    opacity 0.1s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Remove default focus outline and add custom */
:focus {
  outline: none;
}

.focus-ring:focus {
  box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
}

/* Animation keyframes */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.95);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulse {

  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0.5;
  }
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out;
}

.animate-fade-in-scale {
  animation: fadeInScale 0.4s ease-out;
}

.animate-pulse-subtle {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Performance optimized glass effects */
.glass-optimized {
  background: var(--glass);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid var(--glass-border);
  box-shadow: var(--shadow);
  will-change: transform, opacity;
  transform: translateZ(0);
}

.glass-strong-optimized {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(40px);
  -webkit-backdrop-filter: blur(40px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: var(--shadow-lg);
  will-change: transform, opacity;
  transform: translateZ(0);
}

/* Enhanced glass effects for new color palette */
.glass-themed {
  background: var(--node-bg);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid var(--node-border);
  box-shadow: var(--node-shadow);
  will-change: transform, opacity;
  transform: translateZ(0);
}

.dark .glass-themed {
  background: var(--node-bg);
  border: 1px solid var(--node-border);
  box-shadow: var(--node-shadow);
}

/* Button glass effects */
.button-glass {
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.button-glass:hover {
  backdrop-filter: blur(15px);
  -webkit-backdrop-filter: blur(15px);
  transform: translateY(-1px);
}

/* High performance hover states */
.hover-scale {
  transition: transform 0.1s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
}

.hover-scale:hover {
  transform: scale(1.02) translateZ(0);
}

.hover-scale-small {
  transition: transform 0.1s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
}

.hover-scale-small:hover {
  transform: scale(1.01) translateZ(0);
}

/* Custom Canvas Background - Wireframe Sphere Inspired */
.canvas-background {
  position: relative;
  background: var(--background);
  overflow: hidden;
}

.canvas-background::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image:
    /* Fine uniform grid pattern */
    linear-gradient(var(--grid-primary) 1px, transparent 1px),
    linear-gradient(90deg, var(--grid-primary) 1px, transparent 1px);
  background-size:
    10px 10px,
    10px 10px;
  background-position:
    0 0,
    0 0;
  opacity: 1;
  pointer-events: none;
  z-index: 0;
}



/* Node theme styles */
.node-themed {
  background: var(--node-bg);
  border-color: var(--node-border);
  box-shadow: var(--node-shadow);
  color: var(--node-text);
}

.node-themed .node-header {
  background: var(--node-header-bg);
  border-color: var(--node-border);
}

.node-themed .node-input {
  background: var(--node-input-bg);
  border-color: var(--node-border);
  color: var(--node-text);
}

.node-themed .node-input::placeholder {
  color: var(--node-text-muted);
}

.node-themed .node-text-muted {
  color: var(--node-text-muted);
}

/* React Flow edge theming */
.react-flow__edge-path {
  stroke: var(--node-text-muted) !important;
  stroke-width: 2px !important;
}

.react-flow__edge.animated .react-flow__edge-path {
  stroke-dasharray: 5;
  animation: dashdraw 0.5s linear infinite;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: var(--node-text) !important;
}

@keyframes dashdraw {
  to {
    stroke-dashoffset: -10;
  }
}